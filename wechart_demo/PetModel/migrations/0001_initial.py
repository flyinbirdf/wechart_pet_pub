# Generated by Django 3.2.16 on 2022-12-24 12:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PetStatus',
            fields=[
                ('petId', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('petType', models.IntegerField()),
                ('petVariety', models.IntegerField()),
                ('name', models.CharField(max_length=128)),
                ('image', models.ImageField(null=True, upload_to='petimage/', verbose_name='PetImage')),
                ('grow', models.IntegerField()),
                ('hunger', models.IntegerField()),
                ('clean', models.IntegerField()),
                ('active', models.IntegerField()),
                ('healthy', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('account', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('password', models.CharField(max_length=128)),
                ('tel', models.CharField(max_length=16)),
                ('money', models.BigIntegerField()),
                ('rights', models.IntegerField()),
                ('describe', models.CharField(max_length=256)),
                ('image', models.ImageField(null=True, upload_to='usrimg/', verbose_name='UserImage')),
            ],
        ),
        migrations.CreateModel(
            name='ValuableBook',
            fields=[
                ('dictId', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('likedNum', models.IntegerField()),
                ('commentNum', models.IntegerField()),
                ('forwardNum', models.IntegerField()),
                ('name', models.CharField(max_length=128)),
                ('text', models.CharField(max_length=1024)),
                ('image', models.ImageField(null=True, upload_to='dictimage/', verbose_name='PetImage')),
                ('authorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PetModel.userinfo')),
            ],
            options={
                'get_latest_by': 'dictId',
            },
        ),
        migrations.CreateModel(
            name='PetTask',
            fields=[
                ('taskId', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('text', models.CharField(max_length=128)),
                ('isFinish', models.BooleanField()),
                ('growPet', models.IntegerField()),
                ('growType', models.IntegerField()),
                ('growValue', models.IntegerField()),
                ('petId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PetModel.petstatus')),
            ],
        ),
        migrations.AddField(
            model_name='petstatus',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PetModel.userinfo'),
        ),
        migrations.CreateModel(
            name='PetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('typeName', models.CharField(max_length=128)),
                ('variety', models.IntegerField()),
                ('varietyName', models.CharField(max_length=128)),
                ('image1', models.ImageField(null=True, upload_to='pettypeimg/', verbose_name='PetTypeImage')),
            ],
            options={
                'unique_together': {('type', 'variety')},
            },
        ),
        migrations.CreateModel(
            name='PetTypePetRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('petType', models.IntegerField()),
                ('petVariety', models.IntegerField()),
                ('petId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PetModel.petstatus')),
            ],
            options={
                'unique_together': {('petType', 'petVariety', 'petId')},
            },
        ),
        migrations.CreateModel(
            name='FriendRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userId1', to='PetModel.userinfo')),
                ('userId2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userId2', to='PetModel.userinfo')),
            ],
            options={
                'unique_together': {('userId1', 'userId2')},
            },
        ),
        migrations.CreateModel(
            name='DictPetRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('petType', models.IntegerField()),
                ('petVariety', models.IntegerField()),
                ('valuableBook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PetModel.valuablebook')),
            ],
            options={
                'unique_together': {('petType', 'petVariety', 'valuableBook')},
            },
        ),
        migrations.CreateModel(
            name='CommentToDict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentId', models.IntegerField()),
                ('totalAgree', models.IntegerField()),
                ('comment', models.CharField(max_length=1024)),
                ('date', models.DateTimeField()),
                ('dictId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PetModel.valuablebook')),
            ],
            options={
                'unique_together': {('dictId', 'commentId')},
            },
        ),
    ]
